{"version":3,"sources":["helpers/StatusFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","index.tsx"],"names":["StatusFilter","TodoList","todos","className","map","todo","id","completed","cn","title","type","TodoFilter","inputValue","setInputValue","setTodoFilter","onChange","event","target","value","All","ACTIVE","COMPLETED","placeholder","style","pointerEvents","onClick","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","loader","setLoader","todoFilter","visibleTodos","filter","matchesQuery","toLowerCase","trim","includes","Error","useEffect","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ef3ac8d.chunk.js","sourcesContent":["export enum StatusFilter {\n  All = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { StatusFilter } from '../../helpers/StatusFilter';\n\ntype Props = {\n  inputValue: string,\n  setInputValue: (input: React.SetStateAction<string>) => void,\n  setTodoFilter: (status: React.SetStateAction<StatusFilter>) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  inputValue,\n  setInputValue,\n  setTodoFilter,\n}) => {\n  const handleClearinput = () => {\n    setInputValue('');\n  };\n\n  const changeFilter = (event: ChangeEvent<HTMLSelectElement>) => {\n    setTodoFilter(event.target.value as StatusFilter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={changeFilter}\n          >\n            <option value={StatusFilter.All}>All</option>\n            <option value={StatusFilter.ACTIVE}>Active</option>\n            <option value={StatusFilter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {inputValue && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearinput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n// import { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { StatusFilter } from './helpers/StatusFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [todoFilter, setTodoFilter] = useState<StatusFilter>(StatusFilter.All);\n\n  const visibleTodos = todos.filter(todo => {\n    const matchesQuery = todo.title.toLowerCase().trim()\n      .includes(inputValue.toLowerCase().trim());\n\n    switch (todoFilter) {\n      case StatusFilter.All:\n        return todo && matchesQuery;\n\n      case StatusFilter.COMPLETED:\n        return todo.completed && matchesQuery;\n\n      case StatusFilter.ACTIVE:\n        return !todo.completed && matchesQuery;\n\n      default:\n        throw new Error(`Wrong filter, ${todoFilter} is not defined`);\n    }\n  });\n\n  useEffect(() => {\n    setLoader(true);\n\n    getTodos().then(todo => {\n      setTodos(todo);\n    })\n      .finally(() => {\n        setLoader(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                setTodoFilter={setTodoFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader\n                ? <Loader />\n                : <TodoList todos={visibleTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <TodoModal /> */}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}