{"version":3,"sources":["helpers/StatusFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["StatusFilter","TodoList","todos","selectedTodo","selectTodo","className","map","todo","cn","id","completed","title","type","onClick","handleTodoClick","TodoFilter","inputValue","setInputValue","setTodoFilter","statusOptions","Object","values","onChange","event","target","value","option","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectedTodo","useState","user","setUser","useEffect","userId","selectedUser","href","name","App","setTodos","loader","setLoader","All","todoFilter","visibleTodos","filter","formattedTitle","toLowerCase","trim","formattedInputValue","matchesQuery","includes","COMPLETED","ACTIVE","Error","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b133511b.chunk.js","sourcesContent":["export enum StatusFilter {\n  All = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  selectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => {\n  const handleTodoClick = (todo: Todo) => {\n    selectTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': selectedTodo === todo,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleTodoClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': selectedTodo !== todo,\n                      'fa-eye-slash': selectedTodo === todo,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { StatusFilter } from '../../helpers/StatusFilter';\n\ntype Props = {\n  inputValue: string,\n  setInputValue: (input: React.SetStateAction<string>) => void,\n  setTodoFilter: (status: React.SetStateAction<StatusFilter>) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  inputValue,\n  setInputValue,\n  setTodoFilter,\n}) => {\n  const handleClearinput = () => {\n    setInputValue('');\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const changeFilter = (event: ChangeEvent<HTMLSelectElement>) => {\n    setTodoFilter(event.target.value as StatusFilter);\n  };\n\n  const statusOptions = Object.values(StatusFilter);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={changeFilter}\n          >\n            {statusOptions.map(option => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue && (\n            <button\n              aria-label=\"Close\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearinput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport '../../App.scss';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(selectedUser => {\n        setUser(selectedUser);\n      });\n    }\n  }, [selectedTodo]);\n\n  if (!selectedTodo) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close-button\"\n              onClick={() => {\n                setUser(null);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { StatusFilter } from './helpers/StatusFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [todoFilter, setTodoFilter] = useState<StatusFilter>(StatusFilter.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const visibleTodos = todos.filter(todo => {\n    const formattedTitle = todo.title.toLowerCase().trim();\n    const formattedInputValue = inputValue.toLowerCase().trim();\n\n    const matchesQuery = formattedTitle.includes(formattedInputValue);\n\n    switch (todoFilter) {\n      case StatusFilter.All:\n        return todo && matchesQuery;\n\n      case StatusFilter.COMPLETED:\n        return todo.completed && matchesQuery;\n\n      case StatusFilter.ACTIVE:\n        return !todo.completed && matchesQuery;\n\n      default:\n        throw new Error(`Wrong filter, ${todoFilter} is not defined`);\n    }\n  });\n\n  useEffect(() => {\n    setLoader(true);\n\n    getTodos()\n      .then(todo => {\n        setTodos(todo);\n      })\n      .finally(() => {\n        setLoader(false);\n      });\n  }, []);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                setTodoFilter={setTodoFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    selectTodo={selectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        selectedTodo={selectedTodo}\n        setSelectedTodo={setSelectedTodo}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}