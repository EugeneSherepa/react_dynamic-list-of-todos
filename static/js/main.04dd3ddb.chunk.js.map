{"version":3,"sources":["helpers/StatusFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["StatusFilter","TodoList","todos","selectedTodoId","setSelectedTodoId","className","map","todo","isSelected","id","cn","completed","title","type","onClick","TodoFilter","inputValue","setInputValue","setTodoFilter","onChange","event","target","value","All","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","useState","user","setUser","useEffect","userId","selectedUser","href","name","App","setTodos","loader","setLoader","todoFilter","visibleTodos","filter","matchesQuery","toLowerCase","trim","includes","Error","finally","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04dd3ddb.chunk.js","sourcesContent":["export enum StatusFilter {\n  All = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number | null,\n  setSelectedTodoId: (id: number | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  setSelectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const isSelected = todo.id === selectedTodoId;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': isSelected,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodoId(\n                    isSelected ? null : todo.id,\n                  )}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': !isSelected,\n                      'fa-eye-slash': isSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { StatusFilter } from '../../helpers/StatusFilter';\n\ntype Props = {\n  inputValue: string,\n  setInputValue: (input: React.SetStateAction<string>) => void,\n  setTodoFilter: (status: React.SetStateAction<StatusFilter>) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  inputValue,\n  setInputValue,\n  setTodoFilter,\n}) => {\n  const handleClearinput = () => {\n    setInputValue('');\n  };\n\n  const changeFilter = (event: ChangeEvent<HTMLSelectElement>) => {\n    setTodoFilter(event.target.value as StatusFilter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={changeFilter}\n          >\n            <option value={StatusFilter.All}>All</option>\n            <option value={StatusFilter.ACTIVE}>Active</option>\n            <option value={StatusFilter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {inputValue && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearinput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport '../../App.scss';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setSelectedTodoId: (id: number | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(selectedUser => {\n        setUser(selectedUser);\n      });\n    }\n  }, [selectedTodo]);\n\n  if (!selectedTodo) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUser(null);\n                setSelectedTodoId(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { StatusFilter } from './helpers/StatusFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [todoFilter, setTodoFilter] = useState<StatusFilter>(StatusFilter.All);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n\n  const visibleTodos = todos.filter(todo => {\n    const matchesQuery = todo.title.toLowerCase().trim()\n      .includes(inputValue.toLowerCase().trim());\n\n    switch (todoFilter) {\n      case StatusFilter.All:\n        return todo && matchesQuery;\n\n      case StatusFilter.COMPLETED:\n        return todo.completed && matchesQuery;\n\n      case StatusFilter.ACTIVE:\n        return !todo.completed && matchesQuery;\n\n      default:\n        throw new Error(`Wrong filter, ${todoFilter} is not defined`);\n    }\n  });\n\n  useEffect(() => {\n    setLoader(true);\n\n    getTodos().then(todo => {\n      setTodos(todo);\n    })\n      .finally(() => {\n        setLoader(false);\n      });\n  }, []);\n\n  const getSelectedTodo = (id: number | null) => {\n    return visibleTodos.find(todo => todo.id === id) || null;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                setTodoFilter={setTodoFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    setSelectedTodoId={setSelectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        selectedTodo={getSelectedTodo(selectedTodoId)}\n        setSelectedTodoId={setSelectedTodoId}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}